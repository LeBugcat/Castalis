//
// Generated file, do not edit! Created by nedtool 5.6 from node/communication/mac/mac802154/TSCH802154/TSCH802154Packet.msg.
//

#ifndef __TSCH802154PACKET_M_H
#define __TSCH802154PACKET_M_H

#if defined(__clang__)
#  pragma clang diagnostic ignored "-Wreserved-id-macro"
#endif
#include <omnetpp.h>

// nedtool version check
#define MSGC_VERSION 0x0506
#if (MSGC_VERSION!=OMNETPP_VERSION)
#    error Version mismatch! Probably this file was generated by an earlier version of nedtool: 'make clean' should help.
#endif



// cplusplus {{
 #include "node/communication/mac/mac802154/Basic802154Packet_m.h"
// }}

/**
 * Class generated from <tt>node/communication/mac/mac802154/TSCH802154/TSCH802154Packet.msg:47</tt> by nedtool.
 * <pre>
 * packet TSCH802154Packet extends Basic802154Packet
 * {
 *     //	int Mac802154PacketType enum (Mac802154Packet_type);
 *     //	int PANid;
 *     //	int srcID;
 *     //	int dstID;
 *     //	int seqNum;
 *     int currentFramesize;
 *     int parentID;
 * 	// those fields belong to beacon packet (MAC_802154_BEACON_PACKET)
 * }
 * </pre>
 */
class TSCH802154Packet : public ::Basic802154Packet
{
  protected:
    int currentFramesize;
    int parentID;

  private:
    void copy(const TSCH802154Packet& other);

  protected:
    // protected and unimplemented operator==(), to prevent accidental usage
    bool operator==(const TSCH802154Packet&);

  public:
    TSCH802154Packet(const char *name=nullptr, short kind=0);
    TSCH802154Packet(const TSCH802154Packet& other);
    virtual ~TSCH802154Packet();
    TSCH802154Packet& operator=(const TSCH802154Packet& other);
    virtual TSCH802154Packet *dup() const override {return new TSCH802154Packet(*this);}
    virtual void parsimPack(omnetpp::cCommBuffer *b) const override;
    virtual void parsimUnpack(omnetpp::cCommBuffer *b) override;

    // field getter/setter methods
    virtual int getCurrentFramesize() const;
    virtual void setCurrentFramesize(int currentFramesize);
    virtual int getParentID() const;
    virtual void setParentID(int parentID);
};

inline void doParsimPacking(omnetpp::cCommBuffer *b, const TSCH802154Packet& obj) {obj.parsimPack(b);}
inline void doParsimUnpacking(omnetpp::cCommBuffer *b, TSCH802154Packet& obj) {obj.parsimUnpack(b);}


#endif // ifndef __TSCH802154PACKET_M_H

