//
// Generated file, do not edit! Created by nedtool 5.6 from node/communication/mac/mac802154TSCHlite/distributed/DeAMON/DeAMONPacket.msg.
//

#ifndef __DEAMONPACKET_M_H
#define __DEAMONPACKET_M_H

#if defined(__clang__)
#  pragma clang diagnostic ignored "-Wreserved-id-macro"
#endif
#include <omnetpp.h>

// nedtool version check
#define MSGC_VERSION 0x0506
#if (MSGC_VERSION!=OMNETPP_VERSION)
#    error Version mismatch! Probably this file was generated by an earlier version of nedtool: 'make clean' should help.
#endif



// cplusplus {{
#include "node/communication/mac/mac802154TSCHlite/MAC802154LitePacket_m.h"
// }}

/**
 * Enum generated from <tt>node/communication/mac/mac802154TSCHlite/distributed/DeAMON/DeAMONPacket.msg:21</tt> by nedtool.
 * <pre>
 * enum DeAMONPacket_type
 * {
 *     BUILD = 0; //all nodes does
 * 
 *     //for scheduling, only unicast, but will simulate broadcast and overhearing
 *     //and has channel info to simulate signal collisions
 *     RFS = 1;
 *     RFS_OVERHEARD = 2;
 * 
 *     ASG = 3;
 *     ASG_OVERHEARD = 4;
 * 
 *     COLLISION = 5; //special type for CA
 * }
 * </pre>
 */
enum DeAMONPacket_type {
    BUILD = 0,
    RFS = 1,
    RFS_OVERHEARD = 2,
    ASG = 3,
    ASG_OVERHEARD = 4,
    COLLISION = 5
};

/**
 * Class generated from <tt>node/communication/mac/mac802154TSCHlite/distributed/DeAMON/DeAMONPacket.msg:35</tt> by nedtool.
 * <pre>
 * packet DeAMONPacket extends MAC802154LitePacket
 * {
 *     int DeAMONPacketType \@enum(DeAMONPacket_type);
 * 
 *     //for build phase
 *     int childrenListByPriority[]; //sorted list by priority
 * 
 *     //for signalling phase
 *     int signallingTimeslot;
 *     int signallingChannel;
 * 
 *     //for 6top scheduling phase
 *     int RFSTimeslots[];
 *     int RFSChannel;
 *     int ASGTimeslots[];
 *     int ASGChannels[];
 * }
 * </pre>
 */
class DeAMONPacket : public ::MAC802154LitePacket
{
  protected:
    int DeAMONPacketType;
    int *childrenListByPriority; // array ptr
    unsigned int childrenListByPriority_arraysize;
    int signallingTimeslot;
    int signallingChannel;
    int *RFSTimeslots; // array ptr
    unsigned int RFSTimeslots_arraysize;
    int RFSChannel;
    int *ASGTimeslots; // array ptr
    unsigned int ASGTimeslots_arraysize;
    int *ASGChannels; // array ptr
    unsigned int ASGChannels_arraysize;

  private:
    void copy(const DeAMONPacket& other);

  protected:
    // protected and unimplemented operator==(), to prevent accidental usage
    bool operator==(const DeAMONPacket&);

  public:
    DeAMONPacket(const char *name=nullptr, short kind=0);
    DeAMONPacket(const DeAMONPacket& other);
    virtual ~DeAMONPacket();
    DeAMONPacket& operator=(const DeAMONPacket& other);
    virtual DeAMONPacket *dup() const override {return new DeAMONPacket(*this);}
    virtual void parsimPack(omnetpp::cCommBuffer *b) const override;
    virtual void parsimUnpack(omnetpp::cCommBuffer *b) override;

    // field getter/setter methods
    virtual int getDeAMONPacketType() const;
    virtual void setDeAMONPacketType(int DeAMONPacketType);
    virtual void setChildrenListByPriorityArraySize(unsigned int size);
    virtual unsigned int getChildrenListByPriorityArraySize() const;
    virtual int getChildrenListByPriority(unsigned int k) const;
    virtual void setChildrenListByPriority(unsigned int k, int childrenListByPriority);
    virtual int getSignallingTimeslot() const;
    virtual void setSignallingTimeslot(int signallingTimeslot);
    virtual int getSignallingChannel() const;
    virtual void setSignallingChannel(int signallingChannel);
    virtual void setRFSTimeslotsArraySize(unsigned int size);
    virtual unsigned int getRFSTimeslotsArraySize() const;
    virtual int getRFSTimeslots(unsigned int k) const;
    virtual void setRFSTimeslots(unsigned int k, int RFSTimeslots);
    virtual int getRFSChannel() const;
    virtual void setRFSChannel(int RFSChannel);
    virtual void setASGTimeslotsArraySize(unsigned int size);
    virtual unsigned int getASGTimeslotsArraySize() const;
    virtual int getASGTimeslots(unsigned int k) const;
    virtual void setASGTimeslots(unsigned int k, int ASGTimeslots);
    virtual void setASGChannelsArraySize(unsigned int size);
    virtual unsigned int getASGChannelsArraySize() const;
    virtual int getASGChannels(unsigned int k) const;
    virtual void setASGChannels(unsigned int k, int ASGChannels);
};

inline void doParsimPacking(omnetpp::cCommBuffer *b, const DeAMONPacket& obj) {obj.parsimPack(b);}
inline void doParsimUnpacking(omnetpp::cCommBuffer *b, DeAMONPacket& obj) {obj.parsimUnpack(b);}


#endif // ifndef __DEAMONPACKET_M_H

